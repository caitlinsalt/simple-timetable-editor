//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unicorn.FontTools {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Unicorn.FontTools.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading font metrics: font did not start with {0}..
        /// </summary>
        internal static string AfmFontMetrics_FromLines_IncorrectStart {
            get {
                return ResourceManager.GetString("AfmFontMetrics_FromLines_IncorrectStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected end of font metrics data..
        /// </summary>
        internal static string AfmFontMetrics_MoveNextHelper_UnexpectedEnd {
            get {
                return ResourceManager.GetString("AfmFontMetrics_MoveNextHelper_UnexpectedEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading direction-specific data: CharWidth and IsFixedWidth values are inconsistent..
        /// </summary>
        internal static string DirectionMetrics_FromLines_CharWidthClashesWithIsFixedWidth {
            get {
                return ResourceManager.GetString("DirectionMetrics_FromLines_CharWidthClashesWithIsFixedWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient data to load &apos;cmap&apos; table..
        /// </summary>
        internal static string OpenType_CharacterMappingTable_FromBytes_InsufficientLength {
            get {
                return ResourceManager.GetString("OpenType_CharacterMappingTable_FromBytes_InsufficientLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoded value is too large to be converted to a timestamp..
        /// </summary>
        internal static string OpenType_Extensions_ByteArrayExtensions_ToDateTime_OutOfRangeError {
            get {
                return ResourceManager.GetString("OpenType_Extensions_ByteArrayExtensions_ToDateTime_OutOfRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient data to load &apos;head&apos; table..
        /// </summary>
        internal static string OpenType_HeaderTable_FromBytes_InsufficientDataError {
            get {
                return ResourceManager.GetString("OpenType_HeaderTable_FromBytes_InsufficientDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High byte array of incorrect length..
        /// </summary>
        internal static string OpenType_HighByteSubheaderCharacterMapping_FromBytes_ArrayLengthError {
            get {
                return ResourceManager.GetString("OpenType_HighByteSubheaderCharacterMapping_FromBytes_ArrayLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient data to load &apos;hhea&apos; table..
        /// </summary>
        internal static string OpenType_HorizontalHeaderTable_FromBytes_InsufficientDataError {
            get {
                return ResourceManager.GetString("OpenType_HorizontalHeaderTable_FromBytes_InsufficientDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient data to load &apos;maxp&apos; table..
        /// </summary>
        internal static string OpenType_MaximumProfileTable_FromBytes_InsufficientDataError {
            get {
                return ResourceManager.GetString("OpenType_MaximumProfileTable_FromBytes_InsufficientDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding not supported..
        /// </summary>
        internal static string OpenType_NamingTable_FromBytes_EncodingNotSupportedMessage {
            get {
                return ResourceManager.GetString("OpenType_NamingTable_FromBytes_EncodingNotSupportedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient data to load &apos;name&apos; table..
        /// </summary>
        internal static string OpenType_NamingTable_FromBytes_InsufficientDataError {
            get {
                return ResourceManager.GetString("OpenType_NamingTable_FromBytes_InsufficientDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following data tables are missing: {0}..
        /// </summary>
        internal static string OpenType_OpenTypeFont_CheckTablesPresent_MissingTablesError {
            get {
                return ResourceManager.GetString("OpenType_OpenTypeFont_CheckTablesPresent_MissingTablesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OffsetTable not loaded..
        /// </summary>
        internal static string OpenType_OpenTypeFont_CheckValidity_MissingHeaderError {
            get {
                return ResourceManager.GetString("OpenType_OpenTypeFont_CheckValidity_MissingHeaderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown magic number {0}..
        /// </summary>
        internal static string OpenType_OpenTypeFont_LoadOffsetTable_UnknownMagicError {
            get {
                return ResourceManager.GetString("OpenType_OpenTypeFont_LoadOffsetTable_UnknownMagicError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excess character mapping data provided..
        /// </summary>
        internal static string OpenType_PlainByteCharacterMapping_FromBytes_ArrayTooLarge {
            get {
                return ResourceManager.GetString("OpenType_PlainByteCharacterMapping_FromBytes_ArrayTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient character mapping data provided..
        /// </summary>
        internal static string OpenType_PlainByteCharacterMapping_FromBytes_ArrayTooSmall {
            get {
                return ResourceManager.GetString("OpenType_PlainByteCharacterMapping_FromBytes_ArrayTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate glyph name found when loading PostScript information..
        /// </summary>
        internal static string OpenType_PostScriptTable_DuplicateGlyphNameError {
            get {
                return ResourceManager.GetString("OpenType_PostScriptTable_DuplicateGlyphNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag values must be four characters long..
        /// </summary>
        internal static string OpenType_Tag_Constructor_ArrayLengthError {
            get {
                return ResourceManager.GetString("OpenType_Tag_Constructor_ArrayLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No character mapping data provided..
        /// </summary>
        internal static string OpenType_TrimmedTableCharacterMapping_FromBytes_ArrayEmpty {
            get {
                return ResourceManager.GetString("OpenType_TrimmedTableCharacterMapping_FromBytes_ArrayEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No font name specified..
        /// </summary>
        internal static string PdfStandardFontDescriptor_GetByName_EmptyStringParameter {
            get {
                return ResourceManager.GetString("PdfStandardFontDescriptor_GetByName_EmptyStringParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-in font property StandardFontMetrics.{0} not found..
        /// </summary>
        internal static string PdfStandardFontDescriptor_GetByName_FontNotFoundByReflection {
            get {
                return ResourceManager.GetString("PdfStandardFontDescriptor_GetByName_FontNotFoundByReflection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  .
        /// </summary>
        internal static string SpaceCharacter {
            get {
                return ResourceManager.GetString("SpaceCharacter", resourceCulture);
            }
        }
    }
}
